server:
  port: 8090
spring:
  cloud:
    gateway:
#      default-filters:
#        - AddResponseHeader=source, ooo  #相当于流量染色 为所有的经过网关的请求都加一个
      routes:
        - id: path_route
          uri: http://localhost:8080
          predicates:
            - Path=/api/**
        # 将请求路径以/api/**开头的请求转发到目标URI https://yupi.icu
#        - id: add_request_header_route
#          uri: http://localhost:8080/name/
#          predicates:
#            - Path=/api/**
#          filters:
#            - name: CircuitBreaker #定义断路器名
#              args:
#               name: myCircuitBreaker
#               fallbackUri: forward:/fallback
#        - id: ingredients-fallback
#          uri: http://yupi.icu  #降级请求转发到该地址
#          predicates:
#            - Path=/fallback

            #- AddRequestHeader=ice,swag
            #- AddRequestParameter=name,dog
        # 将请求路径以/baidu/**开头的请求转发到目标URI https://baidu.com

#        - id: path_route2
#          uri: https://baidu.com
#          predicates:
#            - Path=/baidu/**
#开启trace日志
# 以下配置指定了应用的名称、使用的协议（Dubbo）、注册中心的类型（Nacos）和地址
dubbo:
  application:
    # 设置应用的名称
    name: dubbo-springboot-demo-provider
  # 指定使用 Dubbo 协议，且端口设置为 -1，表示随机分配可用端口
  protocol:
    name: dubbo
    port: 20000
  registry:
    # 配置注册中心为 Nacos，使用的地址是 nacos://localhost:8848
    id: nacos-registry
    address: nacos://localhost:8848

logging:
  level:
    org:
      springframework:
        cloud:
          gateway: trace